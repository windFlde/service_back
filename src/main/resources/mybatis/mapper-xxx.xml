<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jk.mapper.XxxMapper">

<!--SendPage queryWenZhang(ReceivePage receivePage);

    void insertWenZhang(WenZhang wenZhang);

    void deleteWenZhang(String ids);-->
    <select id="queryWenZhang" resultType="wenzhang">

        select * from t_wenzhang order by sites
    </select>

    <insert id="insertWenZhang">

        insert into t_wenzhang (title,name,img,music,content,browse,creaTime,zeid,strat,fabuTime)VALUES(
          #{title},
          #{name},
          #{img},
          #{music},
          #{content},
          #{browse},
          #{creaTime},
          #{zeid},
          #{strat},
          #{fabuTime},
          #{sites}

        )
    </insert>

    <!--void updateWenZhang(WenZhang wenZhang);-->
    <update id="updateWenZhang">

       update t_wenzhang set title=#{title},
        name=#{name},
        img=#{img},
        musci=#{music},
        content=#{content},
        browse=#{browse},
        creaTime=#{creaTime},
        zeid=#{zeid},
        strat=#{strat},
        fabuTime=#{fabuTime}
    </update>

    <delete id="deleteWenZhang">

        delete from t_wenzhang where id in ('${ids}')
    </delete>

    <!--List<WenXian> queryWenXian();

    void deleteWenXian(@Param("ids") String ids);

    void insertWenXian(WenXian wenZhang);-->
    <select id="queryWenXian" resultType="wenxian">
        select * from t_wenxian
    </select>

    <insert id="insertWenXian">
        INSERT INTO t_wenxian (
            `name`,
            `createTime`,
            `browse`,
            `content`
        )
        VALUES
            (
                #{name},
                #{createTime},
                #{browse},
                #{content}
            )
    </insert>

    <delete id="deleteWenXian">

        delete from t_wenxian where id in ('${ids}')
    </delete>

    <!--WenZhang querySites(WenZhang wenZhang);-->
    <select id="querySites" resultType="wenzhang">
        select * from t_wenzhang where id=#{id}
    </select>

    <!--Integer getSites(Integer sites);-->
    <select id="getSites" resultType="int">
        SELECT ifnull(sites, 1) nextOrder
        FROM t_wenzhang
        WHERE  sites &lt; #{sites}
        order by sites desc limit 0,1
    </select>

    <!--Integer getDownSite(@Param("sites") Integer sites);-->
    <select id="getDownSite" resultType="int">
        SELECT ifnull(sites, 1) nextOrder
        FROM t_wenzhang
        WHERE  sites &gt; #{sites}
        order by sites  limit 0,1
    </select>

    <!--void updateSitesByIntSites(@Param("intSites") Integer intSites, @Param("id") Integer id);-->
    <update id="updateSitesByIntSites">
        update t_wenzhang set sites=#{intSites} where id= #{id}
    </update>

    <!-- void updateBeforeSites(@Param("intSites") Integer intSites,@Param("sites") Integer sites);-->
    <update id="updateBeforeSites">
        update t_wenzhang set sites=#{sites} where sites=#{intSites}
    </update>

    <!--WenZhang toTop(WenZhang wenZhang);-->
    <select id="toTop" resultType="wenzhang">
        select * from t_wenzhang where id=#{id}

    </select>


    <!--void updateSitesByMinSites(@Param("minSites") Integer minSites, @Param("id") Integer id);-->
    <update id="updateSitesByMinSites">
        update t_wenzhang set sites=#{minSites} where id=#{id}
    </update>
    <!--void updateMinSites(@Param("minSites") Integer minSites, @Param("sites") Integer sites);-->
    <update id="updateMinSites">
        update t_wenzhang set sites=#{sites} where sites=#{minSites}
    </update>
</mapper>